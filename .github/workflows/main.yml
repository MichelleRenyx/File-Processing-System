name: CI/CD Pipeline
on:
  push:
    branches:
      - main      # Trigger workflow when employee goes to master branch
  pull_request:
    branches:
      - main      # Trigger the workflow when a Pull Request is created to the master branch

jobs:
  build:
    runs-on: ubuntu-latest   # Using the latest version of Ubuntu run

    steps:
      - name: Checkout code
        uses: actions/checkout@v2   # Check out the code repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'        

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      # Run Jest tests
      - name: Run Jest tests
        run: |
          cd frontend
          npm test -- --ci --watchAll=false

  docker-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up environment variables
        run: |
          export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          export AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker build --build-arg OPENAI_API_KEY=$OPENAI_API_KEY --build-arg AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -t ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest .

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest

      - name: Set up SSH
        run : |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
      
      - name: Deploy to AWS EC2
        run : |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest
            docker stop backend-fileprocessor || true
            docker rm backend-fileprocessor || true
            # docker run -d --name backend-fileprocessor -p 80:8000 -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest
            docker run -d --name backend-fileprocessor -p 80:8000 -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -e AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest
          EOF
