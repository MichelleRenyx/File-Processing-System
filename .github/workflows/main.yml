name: CI/CD Pipeline
on:
  push:
    branches:
      - main      # 在推送到主分支时触发工作流
  pull_request:
    branches:
      - main      # 在创建 Pull Request 到主分支时触发工作流

jobs:
  build:
    runs-on: ubuntu-latest   # 使用最新版本的 Ubuntu 运行

    steps:
      - name: Checkout code
        uses: actions/checkout@v2   # 检出代码仓库

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'        # 配置 Node.js 版本

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      # Run Jest tests
      - name: Run Jest tests
        run: |
          cd frontend
          npm test -- --ci --watchAll=false

  docker-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run : |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest

      - name: Set up SSH
        run : |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
      
      - name: Deploy to AWS EC2
        run : |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.AWS_EC2_IP }} << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest
            docker stop backend-fileprocessor || true
            docker rm backend-fileprocessor || true
            docker run -d -name backend-fileprocessor -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/backend-fileprocessor:latest
          EOF
        
        
        
        
      # - name: Build project
      #   run: |
      #     npm run build  # 构建 React 项目

      # - name: Deploy to GitHub Pages (if applicable)
      #   if: github.ref == 'refs/heads/main' && success()   # 仅当构建成功并且推送到主分支时进行部署
      #   run: |
      #     npm install gh-pages --save-dev  # 安装 gh-pages 依赖
      #     npm run deploy  # 启动部署脚本，通常将构建内容部署到 GitHub Pages
